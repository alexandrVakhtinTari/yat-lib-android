/**
* Emoji ID API server
* Emoji ID is a directory service that associates almost any type of structured data with a short, memorable identifier the emoji id.
*
* The version of the OpenAPI document: 0.2.262
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package yat.android.sdk.models


import com.squareup.moshi.Json
import java.io.Serializable

/**
 * 
 * @param status Status lootbox will be created in  If status is `Used` lootbox with be automatically opened
 * @param yats LootBox emoji IDs
 * @param ownerEmail Assign lootbox an owner with matching email  Should not be set if owner_id is set
 * @param ownerId Lootbox owner_id, required for Owned and Used lootboxes
 */

data class AdminNewLootBoxBody (
    /* Status lootbox will be created in  If status is `Used` lootbox with be automatically opened */
    @field:Json(name = "status")
    val status: AdminNewLootBoxBody.Status,
    /* LootBox emoji IDs */
    @field:Json(name = "yats")
    val yats: kotlin.collections.List<kotlin.String>,
    /* Assign lootbox an owner with matching email  Should not be set if owner_id is set */
    @field:Json(name = "owner_email")
    val ownerEmail: kotlin.String? = null,
    /* Lootbox owner_id, required for Owned and Used lootboxes */
    @field:Json(name = "owner_id")
    val ownerId: java.util.UUID? = null
) : Serializable {
    companion object {
        private const val serialVersionUID: Long = 123
    }

    /**
    * Status lootbox will be created in  If status is `Used` lootbox with be automatically opened
    * Values: draft,available,owned,used
    */
    
    enum class Status(val value: kotlin.String){
        @field:Json(name = "Draft") draft("Draft"),
        @field:Json(name = "Available") available("Available"),
        @field:Json(name = "Owned") owned("Owned"),
        @field:Json(name = "Used") used("Used");
    }
}

