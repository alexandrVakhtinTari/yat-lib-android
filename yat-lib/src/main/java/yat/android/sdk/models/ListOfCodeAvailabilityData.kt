/**
* Emoji ID API server
* Emoji ID is a directory service that associates almost any type of structured data with a short, memorable identifier the emoji id.
*
* The version of the OpenAPI document: 0.2.262
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package yat.android.sdk.models


import com.squareup.moshi.Json
import java.io.Serializable

/**
 * 
 * @param totalUses 
 * @param activator 
 * @param available 
 * @param codeType 
 * @param createdAt 
 * @param deletedAt 
 * @param discountAsPercentage 
 * @param discountInCents 
 * @param endDate 
 * @param id 
 * @param maxEmojisPerUser 
 * @param maxUses 
 * @param name 
 * @param organizationId 
 * @param pattern 
 * @param redemptionCode 
 * @param startDate 
 * @param updatedAt 
 */

data class ListOfCodeAvailabilityData (
    @field:Json(name = "total_uses")
    val totalUses: kotlin.Long,
    @field:Json(name = "activator")
    val activator: ListOfCodeAvailabilityData.Activator? = null,
    @field:Json(name = "available")
    val available: kotlin.Long? = null,
    @field:Json(name = "code_type")
    val codeType: ListOfCodeAvailabilityData.CodeType? = null,
    @field:Json(name = "created_at")
    val createdAt: java.time.OffsetDateTime? = null,
    @field:Json(name = "deleted_at")
    val deletedAt: java.time.OffsetDateTime? = null,
    @field:Json(name = "discount_as_percentage")
    val discountAsPercentage: kotlin.Int? = null,
    @field:Json(name = "discount_in_cents")
    val discountInCents: kotlin.Int? = null,
    @field:Json(name = "end_date")
    val endDate: java.time.OffsetDateTime? = null,
    @field:Json(name = "id")
    val id: java.util.UUID? = null,
    @field:Json(name = "max_emojis_per_user")
    val maxEmojisPerUser: kotlin.Int? = null,
    @field:Json(name = "max_uses")
    val maxUses: kotlin.Int? = null,
    @field:Json(name = "name")
    val name: kotlin.String? = null,
    @field:Json(name = "organization_id")
    val organizationId: java.util.UUID? = null,
    @field:Json(name = "pattern")
    val pattern: kotlin.Any? = null,
    @field:Json(name = "redemption_code")
    val redemptionCode: kotlin.String? = null,
    @field:Json(name = "start_date")
    val startDate: java.time.OffsetDateTime? = null,
    @field:Json(name = "updated_at")
    val updatedAt: java.time.OffsetDateTime? = null
) : Serializable {
    companion object {
        private const val serialVersionUID: Long = 123
    }

    /**
    * 
    * Values: redemptionCode,secretKey
    */
    
    enum class Activator(val value: kotlin.String){
        @field:Json(name = "RedemptionCode") redemptionCode("RedemptionCode"),
        @field:Json(name = "SecretKey") secretKey("SecretKey");
    }
    /**
    * 
    * Values: discount,randomYat
    */
    
    enum class CodeType(val value: kotlin.String){
        @field:Json(name = "Discount") discount("Discount"),
        @field:Json(name = "RandomYat") randomYat("RandomYat");
    }
}

